// Ordered List class that uses the custom numbering styling.
ol.number {
  list-style: none;
  margin: 1em 0 0 0;
  padding: 0;
  counter-reset: li;
  /* reset counter for ol (li is just arbitrary identifier) */
  > li {
    position: relative;
    padding: .75em 0 0 3.5em;
    margin: 0 0 1.5em 0;
    &.ng-invalid:before {
      border-color: $sg_alert_danger;
      color: $sg_alert_danger;
    }
  }
  > li:before {
    position: absolute;
    left: 0;
    top: .25em;
    display: block;
    content: counter(li);
    /* set its content to CSS generated counter, using the "li" counter defined above */
    counter-increment: li;
    /* increment the li counter each time, assumed starting index is 0 */
    color: $sg_primary;
    font-size: 1.5em;
    font-family: $base-font-family;
    border-radius: 10em;
    border-width: 2px;
    border-style: solid;
    border-color: $sg_primary;
    padding: 0;
    text-align: center;
    min-width: $base-number-icon-size; // changing to px due to varying widths on different screen resolutions
    display: block;
    float: left;
    line-height: 1.4em;
    height: $base-number-icon-size; // changing to px due to varying widths on different screen resolutions
  }
}
@mixin seperated-by-line ($childTag: "li") {
  padding-left: 0;
  margin-top: 10px;
  margin-bottom: 0;
  > #{$childTag} {
    @include clearfix;
    border-top: 1px solid $sg_light_grey_border;
    > .radio, >.checkbox {
      margin-top: 0;
      margin-bottom: 0;
    }
    &:last-child {
      border-bottom: 1px solid $sg_light_grey_border;
    }
  }
  &.with-text > #{$childTag} {
    padding-top: 1em;
    padding-bottom: 1em;
    &:first-child {
      padding-top: 0;
    }
  }
  &.is-child-list {
    margin-left: 0;
    margin-right: 0;
    margin-top: -13px; // This negative reduces the space between ul and child ul
    > #{$childTag} {
      border-bottom: none;
    }
  }
}
@mixin reset-side-margins($additional-padding: 0) {
	margin-left: (-$page-wrapper-padding) - $additional-padding;
	margin-right: (-$page-wrapper-padding) - $additional-padding;
}
.seperated-by-line {
  @include seperated-by-line;
  @include reset-side-margins;
  p {
    padding-left: 10px;
    margin-bottom: 0;
  }
  .menu-item-not-link {
    padding: 3px 20px;
  }
  .row-with-icon {
    padding-right: 60px;
    &.icon-on-right > .row-icon {
      top: 5%;
      right: 10px;
    }
  }
}

// Styling for definition lists
.dl-horizontal {
  @media #{$mq-xs-screen-only} {
    dt, dd {
      > a {
        font-size: $base-mobile-font-size;
      }
    }
  }
  dt.stacked {
	  float: none;
	  & + dd {
		  margin-left: 0;
	  }
  }
}
/* ================ MIXIN FOR CREATING DL WITH VARYING SPACING
Author: Martin Castre
Date: 7-8-15
Documentation: Define short, medium, and large -list for
increasing or decreasing the space between dt and dl.
*/
$micro-list: 80px;
$short-list: 120px;
$medium-list: 160px;
$large-list: 200px;
$xlarge-list: 270px;

@mixin dl-type($size: $short-list) {
  @media #{$mq-sm-screen} {
    > dt {
      width: $size;
    }
    > dd {
      margin-left: $size;
    }
  }
}
// Modifier class to left text-align dt in .dl-horizontal
.dt-as-left-aligned {
  dt {
    text-align: left;
  }
  &.micro-list {
    @include dl-type($micro-list);
  }
  &.short-list {
    @include dl-type($short-list);
  }
  &.medium-list {
    @include dl-type($medium-list);
  }
  &.large-list {
    @include dl-type($large-list);
  }
  &.xlarge-list {
    @include dl-type($xlarge-list);
  }
}

/*doc
---
title: Lists
name: d_lists
parent : a_b_typography
category: Globals
---

*/

/*doc
---
title: Unordered Lists
name: a_unordered_lists
parent : d_lists
category: Globals
---

Unordered lists, `ul`, are a collection of items that are not numbered and order is not important. By default, `ul`, are bulleted. For an un-bulleted list, use the Bootstrap class `.list-unstyled` on the parent `ul`.

If you are using a collection of links as a list, please use the proper accessibility role requirements for list items:

```html_example
<ul role="menu">
  <li role="presentation"><a href="" role="menuitem">List Item 1</a></li>
  <li role="presentation"><a href="" role="menuitem">List Item 2</a></li>
  <li role="presentation"><a href="" role="menuitem">List Item 3</a></li>
</ul>
```

*/

/*doc
---
title: Ordered Lists
name: b_ordered_lists
parent : d_lists
category: Globals
---

Ordered lists, `ol`, are a collection of items that are numbered.

If you are using a collection of links as a list, please use the proper accessibility role requirements for list items:

```html_example
<ol role="menu">
  <li role="presentation"><a href="" role="menuitem">List Item 1</a></li>
  <li role="presentation"><a href="" role="menuitem">List Item 2</a></li>
  <li role="presentation"><a href="" role="menuitem">List Item 3</a></li>
</ol>
```

You can also use our customized ordered list numbers using the `.number` class on the parent `ol`.

```html_example
<ol class="number" role="menu">
  <li role="presentation"><a href="" role="menuitem">List Item 1</a></li>
  <li role="presentation"><a href="" role="menuitem">List Item 2</a></li>
  <li role="presentation"><a href="" role="menuitem">List Item 3</a></li>
</ol>
```
*/

/*doc
---
title: Definition Lists
name: c_definition_lists
parent : d_lists
category: Globals
---

Definition lists, or Descriptive lists, are used to list out terms and description pairs. `dl`s contain `dt`, (which stands for definition term), and `dd` (which is the description of the term). Like unordered lists, you cannot insert non-dl elements in the `dl`, or between the `dt` and `dd`.

Definition lists come in 2 styles: horizontal and vertical. Most of the `dl`s in the app use the `.dl-horizontal` class to align the terms and descriptions horizontally. On mobile, it defaults to stacked style. Bootstrap right-aligns the `dt` by default when using the `.dl-horizontal` class. This is not an optimal UX experience, therefore always add the class `.dt-as-left-aligned` to the `dl` parent

You can also define the size of the `dl` in 3 ways: `.short-list`, `.medium-list`, `.large-list`. Each class defines a certain width and spacing of `dt`,`dd` elements. By default, use the `.medium-list` class.


```html_example
<dl class="dl-horizontal dt-as-left-aligned medium-list">
  <dt>Patient Name</dt>
  <dd>Edward Stone</dd>
  <dt>Task Name</dt>
  <dd>Connect with New Patient Approval Request</dd>
  <dt>Request Id</dt>
  <dd>PMEM1ACEQE</dd>
</dl>
```

*/
